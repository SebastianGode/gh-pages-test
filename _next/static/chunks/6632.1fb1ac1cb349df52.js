"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6632],{55860:function(t,e,s){s.d(e,{c:function(){return o}});var r,i,o=(r=i={path:void 0,exports:{},require:function(t,e){return function(){throw Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}()}},i.exports,function(){var t={}.hasOwnProperty;function e(){for(var s=[],r=0;r<arguments.length;r++){var i=arguments[r];if(i){var o=typeof i;if("string"===o||"number"===o)s.push(i);else if(Array.isArray(i)&&i.length){var n=e.apply(null,i);n&&s.push(n)}else if("object"===o)for(var a in i)t.call(i,a)&&i[a]&&s.push(a)}}return s.join(" ")}r.exports?(e.default=e,r.exports=e):window.classNames=e}(),i.exports)},36632:function(t,e,s){s.r(e),s.d(e,{scale_toggle_group:function(){return a}});var r=s(17005),i=s(55860),o=s(31811),n=s(75113);let a=class{constructor(t){(0,r.r)(this,t),this.scaleChange=(0,r.c)(this,"scale-change",7),this.scaleChangeLegacy=(0,r.c)(this,"scaleChange",7),this.position=0,this.slottedButtons=0,this.status=[],this.size="regular",this.background="white",this.fullWidth=!1,this.disabled=!1,this.hideBorder=!1,this.singleSelect=!1,this.ariaLabelTranslation="toggle button group with $slottedButtons buttons",this.colorScheme="color",this.variant="color"}scaleClickHandler(t){let e;e=this.singleSelect?t.detail.selected?this.status.map(e=>t.detail.id===e.id?t.detail:Object.assign(Object.assign({},e),{selected:!1})):this.status.map(e=>t.detail.id===e.id?t.detail:Object.assign({},e)):this.status.map(e=>t.detail.id===e.id?t.detail:Object.assign({},e)),this.setNewState(e)}handlePropsChange(){this.propagatePropsToChildren()}componentDidLoad(){let t=[],e=this.getAllToggleButtons();this.slottedButtons=e.length,e.forEach(e=>{this.position++,t.push({id:e.getAttribute("toggle-button-id"),selected:e.hasAttribute("selected")}),e.setAttribute("position",this.position.toString()),e.setAttribute("aria-description-translation","$position $selected")}),this.propagatePropsToChildren(),this.position=0,this.status=t}getAllToggleButtons(){return Array.from(this.hostElement.querySelectorAll("scale-toggle-button"))}propagatePropsToChildren(){this.getAllToggleButtons().forEach(t=>{t.setAttribute("size",this.size),t.setAttribute("background",this.background),t.setAttribute("disabled",this.disabled&&"disabled"),t.setAttribute("color-scheme","color"!==this.variant?this.variant:this.colorScheme),t.setAttribute("variant","color"!==this.colorScheme?this.colorScheme:this.variant),t.setAttribute("hide-border",this.hideBorder?"true":"false")})}getAriaLabelTranslation(){let t=this.ariaLabelTranslation.replace(/\$slottedButtons/g,`${this.slottedButtons}`);return t}componentDidRender(){this.fullWidth&&this.setButtonWidth(),this.setChildrenCorners(),"color"!==this.colorScheme&&(0,n.s)({tag:"deprecated",message:'Property "colorScheme" is deprecated. Please use the "variant" property!',type:"warn",source:this.hostElement})}setNewState(t){let e=Array.from(this.hostElement.querySelectorAll("scale-toggle-button"));e.forEach((e,s)=>{e.setAttribute("selected",t[s].selected?"true":"false")}),this.status=t,(0,o.e)(this,"scaleChange",this.status)}setButtonWidth(){Array.from(this.hostElement.children).forEach(t=>{let e=t.shadowRoot.querySelector("button");e.style.width="100%"})}setChildrenCorners(){let t=Array.from(this.hostElement.children);if(1===t.length)t[0].setAttribute("radius","all");else for(let e=0;e<t.length;e++)0===e&&t[e].setAttribute("radius","left"),e>0&&e<t.length-1&&t[e].setAttribute("radius","neither"),e===t.length-1&&t[e].setAttribute("radius","right")}render(){return(0,r.h)(r.a,null,this.styles&&(0,r.h)("style",null,this.styles),(0,r.h)("div",{class:this.getCssClassMap(),part:this.getBasePartMap(),"aria-label":this.getAriaLabelTranslation(),role:"group"},(0,r.h)("slot",null)))}getBasePartMap(){return this.getCssOrBasePartMap("basePart")}getCssClassMap(){return this.getCssOrBasePartMap("css")}getCssOrBasePartMap(t){let e="basePart"===t?"":"toggle-group--";return(0,i.c)("toggle-group",this.fullWidth&&`${e}block`,!this.fullWidth&&`${e}inline`,this.disabled&&`${e}disabled`)}get hostElement(){return(0,r.g)(this)}static get watchers(){return{background:["handlePropsChange"],disabled:["handlePropsChange"],hideBorder:["handlePropsChange"],size:["handlePropsChange"],variant:["handlePropsChange"]}}};a.style=":host{--border-color:var(--telekom-color-ui-border-standard);--border-color-disabled:var(--telekom-color-ui-border-disabled);--border:var(--telekom-spacing-composition-space-01) solid\n    var(--border-color);--border-disabled:var(--telekom-spacing-composition-space-01) solid\n    var(--border-color-disabled);--radius:var(--telekom-radius-standard)}.toggle-group--inline{display:inline-flex}.toggle-group--block{display:flex}.toggle-group--block ::slotted(*){flex-grow:1}"},75113:function(t,e,s){s.d(e,{s:function(){return o}});/**
 * @license
 * Scale https://github.com/telekom/scale
 *
 * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */let r={beta:"β",WIP:"\uD83D\uDEE0 WIP",deprecated:"\uD83D\uDE35 Deprecation notice",warning:"Warning"},i={beta:"This component is currently in beta status. Some things may be refactored. Watch the change log for now.",WIP:"This component is currently under development and is prone to change. Please wait for its release.\nIt will be available in Storybook once it's finished and documented.",deprecated:"This component is deprecated."};function o({tag:t="WIP",extraMessage:e=null,message:s=null,source:o=null,type:n="info"}){let a=console[n];a(`%c scale – ${r[t]} `,"background: #E20074; color: #FFF; border-radius: 4px",`

${s||i[t]} ${e?"\n"+e:""}
    `,null!==o?"\nsource:":"","object"==typeof o?o:`${o}`,null!==o?"\n\n":"")}},31811:function(t,e,s){s.d(e,{a:function(){return u},b:function(){return n},c:function(){return i},e:function(){return o},g:function(){return h},h:function(){return r},i:function(){return a}});/**
 * @license
 * Scale https://github.com/telekom/scale
 *
 * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */let r=t=>!!t.shadowRoot&&!!t.attachShadow,i=t=>{let e=document.styleSheets[0];if(!e){let t=document.createElement("style");document.head.appendChild(t),e=document.styleSheets[0],document.head.removeChild(t)}return function(){try{return/^:/.test(t)||(t=":"+t),e.insertRule("html"+t+"{}",0),e.deleteRule(0),!0}catch(t){return!1}}()};function o(t,e,s){let r=e+"Legacy",i=[];return void 0!==t[r]&&i.push(t[r].emit(s)),i.push(t[e].emit(s)),i}function n(t,e){let s=t.target,r=null!=s.shadowRoot,i=r?t.composedPath():[];do{if(s===e)return!1;s=r?i.shift():s.parentNode}while(s);return!0}let a=t=>null!=t&&1===t.nodeType&&"SCALE-ICON"===t.nodeName.toUpperCase().substring(0,10),l=0;function h(){return l++}let u=t=>Promise.all(t.getAnimations({subtree:!0}).map(t=>t.finished))}}]);